public class Solution 
{		
  public static void placeNQueens(int n)
  {
	int chess[][]=new int[n][n];
	placeNQueens(chess,"",0);
	}
	
	private static void placeNQueens(int[][] chess,String str,int row)
	{
		if(row==chess.length)
		{
			for(int i=0;i<chess.length;i++)
			{
				for(int j=0;j<chess.length;j++)
				{
					System.out.print(chess[i][j]+" ");
				}
			}
			System.out.println();
			return;
		}
		
		for(int col=0;col<chess.length;col++)
		{
		if(safeplace(chess,row,col)==true)
		{
		chess[row][col]=1;
		placeNQueens(chess,str+row+"-"+col+",",row+1);
		chess[row][col]=0;
		}
		}
	}
	
	public static boolean safeplace(int chess[][],int row,int col)
	{
		for(int i=row-1,j=col;i>=0;i--)
		{
			if(chess[i][j]==1)
			{
				return false;
			}
		}
		
		for(int i=row-1,j=col-1;i>=0&&j>=0;i--,j--)
		{
			if(chess[i][j]==1)
			{
				return false;
			}
		}
		
		for(int i=row-1,j=col+1;i>=0&&j<chess.length;i--,j++)
		{
			if(chess[i][j]==1)
			{
				return false;
			}
		}
		return true;	
   }	
}
