public class solution 
{
	public static void printAllPossibleCodes(String input)
  {
	String output[]=getCode(input);
  for(int i = 0; i < output.length; i++)
  {
	System.out.println(output[i]);
  }
  }
  public static  String[] getCode(String input)
  {
	if (input.length() == 0) 
  {
     String[] myans = { "" };
     return myans;
  }
        
  int firstdigit = (input.charAt(0) - '0');
  //1  --  49
  // 1 2 3
  String[] smallans1 = getCode(input.substring(1)); 
  String[] smallans2 = new String[0];

  int firsttwodigits = 0;
  if (input.length() >= 2) 
  {
  firsttwodigits = (input.charAt(0) - '0') * 10 + (input.charAt(1) - '0');
  if (firsttwodigits > 10 && firsttwodigits <= 26) 
  {
   smallans2 = getCode(input.substring(2));
   }
   }
   String[] ans1 = new String[smallans1.length + smallans2.length];
   int k = 0;
        
   // copying the subset
   for (int i = 0; i < smallans1.length; i++) 
   {
    char first = getchar(firstdigit);
    ans1[k] = first + smallans1[i];
    k++;
    }
    // making the new subsets with current element
    for (int i = 0; i < smallans2.length; i++) 
    {
    char first = getchar(firsttwodigits);
    ans1[k] = first + smallans2[i];
    k++;
    }
    return myans;
	}
    // to get character for the code at number n
    public static char getchar(int n) 
    {
        return (char)(96+n);     
    }
}
