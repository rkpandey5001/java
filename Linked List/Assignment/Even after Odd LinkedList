/*
    class LinkedListNode<T> 
    {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) 
        {
            this.data = data;
        }
    }
*/


public class Solution
{
	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head)
  {
		LinkedListNode<Integer> oddH=null,oddT=null,evenH=null,evenT=null;
		
		 while(head!=null)
		 {
			 if(head.data%2==0)
			 {
					if(evenH==null&&evenT==null)
					{
					    evenH=head;
					    evenT=head;
					 }
				   else
				   {
					  evenT.next=head;
					  evenT=head;
				    }
					  head=head.next;
					}
				  else
					{
					  if(oddH==null&&oddT==null)
					  {
						  oddH=head;
						  oddT=head;
					  }
					  else
					  {
						oddT.next=head;
						oddT=head;
					  }
					 head=head.next;
					}
				 }
         
			   if(oddH!=null)
			   {
				   oddT.next=evenH;
			   }
			   else
			   {
				   return evenH;
			   }
         
			   if(evenH!=null)
			   {
				   evenT.next=null;
			   }
         
			   return oddH;
	}
}
