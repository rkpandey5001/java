/*	Binary Tree Node class 
	 * 
	 * 	class BinaryTreeNode<T>
   {
			T data;
			BinaryTreeNode<T> left;
			BinaryTreeNode<T> right;
			
			public BinaryTreeNode(T data) 
      {
				this.data = data;
			}
		}
		*/
	
	public static BinaryTreeNode<Integer> SortedArrayToBST(int[] arr, int n)
  {
     return helper(arr,0,arr.length-1);
	}
  
	public static BinaryTreeNode<Integer> helper(int[] arr, int si,int last)
	{
		if(si>last)
		{
			return null;
		}
		int mid=(si+last)/2;
		BinaryTreeNode<Integer> root=new BinaryTreeNode<Integer>(arr[mid]);
		root.left=helper(arr,si,mid-1);
		root.right=helper(arr,mid+1,last);
		return root;
		}
	}
